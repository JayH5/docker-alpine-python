sudo: required
language: python
services:
  - docker

env:
  global:
    - REGISTRY_USER=praekeltorgdeploy
    - secure: "OIjqHeoNs0jHoqk5mAY2qux+qsokxcuwxBDDdbwCyJg0P5EQAu9XakIzThpZZixIJ/3VAATFdHK/xlNzJeanq7LUZr11DJKBD3H7jmYE2hm5+3qjjNh8KW8Z8NluezmwGWz6gkb8sCsgO2+k7sKC+4h4AERBOceF21V+iOUjBeCw1Q9DVDoBEznbIv1MJhe4G8V5Z3PEFaoerJ4Cy1VsEQRpHEzWyIBxgr4mXfGv4H6PLgTTNSs0+afSCJL5Nc5EU67NpLFTPBIS65yD5xDkLA+Tl4cLomJAwZNe8J9+GQWSua9ehqj0kPOuolkxGWZ5M/Z+yk80i9FNy0CdEWoEKrQMOCnnOwK769PWyKyzYCI9FWPky1rRAqFAdGmMspI3i1qm3wMUUERGqB9U0XuywPbrvqTVKqrdWP69Gwx84ZGvxnODN3nW1Yot/M75p9JbwbnBy+4tRDEqdXGbU1hefsCa7nA51CG1v8kybx6BmCRGWPUDTAR1m+ugRWvJjsaGOSILsSjUcQtlZbGSomLz0rJUgQi2qQEPKVbXv9zx8b9lzIYgxpKpLlONDgNBeFiW5RdT7yDvRUpDk0oSUi0YafkVqON6RuyQmmcg/dsXNtPr/712jqGO2BV3YPpiFB8xAZMWnfaBCe9dOSEDdo7f9PFvz0vUjFoeOC0FnVdd4DY="
  matrix:
    - VERSION=2.7
    - VERSION=3.5
    - VERSION=3.6

before_install:
  - sudo apt-get update
  - sudo apt-get install -o Dpkg::Options::="--force-confold" -y docker-engine

install:
  - git clone https://github.com/docker-library/official-images.git ~/official-images
  - pip install coverage flake8

before_script:
  - image="$(awk '$1 == "FROM" { print $2; exit }' $VERSION/onbuild/Dockerfile)"
  - version="$(awk '$2 == "PYTHON_VERSION" { print $3; exit }' $VERSION/Dockerfile)"
  - echo "Building image $image with Python version $version"

script:
  - docker build -t "$image" "$VERSION"
  # Run the "official-images" tests, but first tag our image like the official
  # ones to get the same tests
  - docker tag "$image" "python:$VERSION" && ~/official-images/test/run.sh "python:$VERSION"
  # Build the onbuild variant because it's FROM the single variant we build
  - docker build -t "${image}-onbuild" "$VERSION/onbuild"
  # Also make sure our deploy script works
  - coverage run --include=deploy.py ./test_deploy.py && coverage report -m
  - flake8 .

after_script:
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
deploy:
  provider: script
  script: ./deploy.py "$image" "$version" && ./deploy.py "${image}-onbuild" "$version"
  on:
    branch: develop
